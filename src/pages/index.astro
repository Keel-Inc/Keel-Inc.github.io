---
import { getCollection } from 'astro:content';
import BaseLayout from "../layouts/BaseLayout.astro";

const site = {
  url:  'https://keel-inc.com',
  title: 'Keel Inc.',
  desc:
    'Evergreen, step-by-step tutorials for building modern embedded software in highly regulated environments.'
};

// Get articles from content collection
const articles = await getCollection('articles');
const articlesList = articles.map(article => ({
  slug: `/guides/${article.slug}`,
  title: article.data.title,
  desc: article.data.description
}));

// Read bio content
const bioModules = import.meta.glob('../content/bio.md');
const bio = await bioModules['../content/bio.md']() as any;
---
<BaseLayout>
  <Fragment slot="head">
    <title>{site.title}</title>
    <meta name="description" content={site.desc} />
    <link rel="canonical" href={site.url} />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=EB+Garamond:ital,wght@0,400;0,500;0,600;0,700;1,400;1,500;1,600;1,700&family=Libre+Baskerville:ital,wght@0,400;0,700;1,400&display=swap" rel="stylesheet">

    <!-- OpenGraph -->
    <meta property="og:type"        content="website" />
    <meta property="og:url"         content={site.url} />
    <meta property="og:title"       content={site.title} />
    <meta property="og:description" content={site.desc} />
    <meta property="og:image"       content="/images/og-banner.png" />

    <!-- Twitter Cards -->
    <meta name="twitter:card"        content="summary_large_image" />
    <meta name="twitter:title"       content={site.title} />
    <meta name="twitter:description" content={site.desc} />
    <meta name="twitter:image"       content="/images/og-banner.png" />

    <!-- Structured data -->
    <script type="application/ld+json">
    {JSON.stringify({
      "@context": "https://schema.org",
      "@type": "WebSite",
      "url": site.url,
      "name": "Keel Inc.",
      "description": site.desc,
      "creator": { "@type": "Person", "name": "Richard Keelan" },
      "potentialAction": {
        "@type": "SearchAction",
        "target": `${site.url}/search?q={search_term_string}`,
        "query-input": "required name=search_term_string"
      }
    })}
    </script>

    <script type="application/ld+json">
    {JSON.stringify({
      "@context": "https://schema.org",
      "@type": "ItemList",
      "itemListElement": articlesList.map((g, i) => ({
        "@type": "ListItem",
        "position": i + 1,
        "name": g.title,
        "url": `${site.url}${g.slug}`
      }))
    })}
    </script>
  </Fragment>

  <header class="py-12 text-center">
    <h1 class="font-extrabold font-heading-1">
      Richard Keelan
    </h1>
  </header>

  <main class="flex-1 max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
    <section class="mb-12">
      <div class="prose prose-lg mx-auto text-left">
        <bio.Content />
      </div>
      <div class="text-center mt-6">
        <p class="text-lg">
          <a href="https://github.com/RKeelan/" class="text-blue-600 hover:text-blue-800 underline">GitHub</a> | 
          <a href="https://www.linkedin.com/in/richard-keelan-79793611/" class="text-blue-600 hover:text-blue-800 underline">LinkedIn</a> | 
          <a href="https://x.com/r_keelan" class="text-blue-600 hover:text-blue-800 underline">Twitter</a>
        </p>
      </div>
    </section>

    <section>
      <ul class="space-y-6">
        {articlesList.map(g => (
          <li>
            <a href={g.slug} class="font-heading-3">{g.title}</a><br/>
            <span class="text-slate-600 font-subtitle">{g.desc}</span>
          </li>
        ))}
      </ul>
    </section>
  </main>

  <footer class="py-8 text-center text-sm text-slate-500 font-caption">
    &copy; {new Date().getFullYear()} Keel Inc.
    <a href="mailto:contact@keel-inc.com" class="underline">Contact</a>
  </footer>
</BaseLayout>
